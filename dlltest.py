import unittest
import dll

class TestLinkedList(unittest.TestCase):
    def testBasics(self):
        list = dll.DoubleLinkedList()
        self.assertEqual(0, list.len())
        self.assertRaises(Exception, lambda: list.first())
        self.assertRaises(Exception, lambda: list.last())
        self.assertRaises(Exception, lambda: list.pop())
        self.assertRaises(Exception, lambda: list.shift())
        list.push(1)
        self.assertEqual(1, list.len())
        self.assertEqual(1, list.first())
        self.assertEqual(1, list.last())
        self.assertEqual(1, list.pop())
        list.push(1)
        self.assertEqual(1, list.shift())
        self.assertEqual(0, list.len())
        self.assertEqual(list.__NULL__, list.head)
        self.assertEqual(list.__NULL__, list.tail)
        list.push(1)
        list.push(2)
        list.unshift(3)
        self.assertEqual(3, list.len())
        self.assertEqual(3, list.first())
        self.assertEqual(3, list.shift())
        self.assertEqual(1, list.shift())
        self.assertEqual(2, list.first())
        self.assertEqual(2, list.last())
        self.assertEqual(2, list.shift())

    def testContaining(self):
        list = dll.DoubleLinkedList()
        list.push(1)
        list.push(2)
        list.push(3)
        list.push(4)
        list.push(2)
        self.assertEqual(True, list.contains(4))
        self.assertEqual(True, list.contains(1))
        self.assertEqual(True, list.contains(2))
        self.assertEqual(False, list.contains(6))

    def testDeleting(self):
        list = dll.DoubleLinkedList()
        list.push(1)
        list.push(2)
        list.push(3)
        list.push(4)
        list.push(2)
        list.delete(2)
        list.delete(1)
        list.delete(6)
        self.assertEqual(3, list.len())
        self.assertEqual(3, list.shift())
        self.assertEqual(4, list.shift())
        self.assertEqual(2, list.shift())
        self.assertEqual(0, list.len())
        list.push(1)
        list.delete(2)
        list.delete(1)
        self.assertEqual(0, list.len())
        self.assertRaises(Exception, lambda: list.shift())
